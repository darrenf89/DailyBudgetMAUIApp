using DailyBudgetMAUIApp.Models;
using DailyBudgetMAUIApp.Pages;
using DailySpendWebApp.Models;
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DailyBudgetMAUIApp.DataServices
{
    public interface IRestDataService
    {
        public Task<string> PatchUserAccount(int UserID, List<PatchDoc> PatchDoc);
        public Task<UserDetailsModel> RegisterNewUserAsync(RegisterModel User);
        public Task<string> GetUserSaltAsync(string UserEmail);
        public string LogoutUserAsync(RegisterModel User);
        public Task<UserDetailsModel> GetUserDetailsAsync(string UserEmail);
        public Task<ErrorLog> CreateNewErrorLog(ErrorLog NewLog);
        public Task<Budgets> GetBudgetDetailsAsync(int BudgetID, string Mode);
        public Task<DateTime> GetBudgetLastUpdatedAsync(int BudgetID);
        public Task<DateTime> GetBudgetValuesLastUpdatedAsync(int BudgetID, string page);
        public Task<DateTime> GetBudgetNextIncomePayDayAsync(int BudgetID);
        public Task<int> GetBudgetDaysBetweenPayDay(int BudgetID);
        public Task<BudgetSettingValues> GetBudgetSettingsValues(int BudgetID);
        public Task<BudgetSettings> GetBudgetSettings(int BudgetID);
        public Task<Budgets> CreateNewBudget(string UserEmail, string? BudgetType = "Basic");
        public Task<List<lut_CurrencySymbol>> GetCurrencySymbols(string SearchQuery);
        public Task<List<lut_CurrencyPlacement>> GetCurrencyPlacements(string SearchQuery);
        public Task<List<lut_BudgetTimeZone>> GetBudgetTimeZones(string SearchQuery);
        public Task<List<lut_DateFormat>> GetDateFormatsByString(string SearchQuery);
        public Task<lut_DateFormat> GetDateFormatsById(int ShortDatePattern, int Seperator);
        public Task<lut_BudgetTimeZone> GetTimeZoneById(int TImeZoneID);
        public Task<lut_NumberFormat> GetNumberFormatsById(int CurrencyDecimalDigits, int CurrencyDecimalSeparator, int CurrencyGroupSeparator);
        public Task<List<lut_NumberFormat>> GetNumberFormats();
        public Task<lut_ShortDatePattern> GetShortDatePatternById(int ShortDatePatternID);
        public Task<lut_DateSeperator> GetDateSeperatorById(int DateSeperatorID);
        public Task<string> UpdatePayPeriodStats(PayPeriodStats Stats);
        public Task<PayPeriodStats> CreateNewPayPeriodStats(int BudgetID);
        public Task<string> PatchBudget(int BudgetID, List<PatchDoc> PatchDoc);
        public Task<string> UpdateBudgetSettings(int BudgetID, BudgetSettings BS);
        public Task<Bills> GetBillFromID(int BillID);
        public Task<string> SaveNewBill(Bills Bill, int BudgetID);
        public Task<string> UpdateBill(Bills Bill);
        public Task<string> PatchBill(int BillID, List<PatchDoc> PatchDoc);
        public Task<string> DeleteBill(int BillID);
        public Task<List<Bills>> GetBudgetBills(int BudgetID, string page);
        public Task<Savings> GetSavingFromID(int SavingID);
        public Task<int> SaveNewSaving(Savings Saving, int BudgetID);
        public Task<string> UpdateSaving(Savings Saving);
        public Task<string> PatchSaving(int SavingID, List<PatchDoc> PatchDoc);
        public Task<string> DeleteSaving(int SavingID);
        public Task<List<Savings>> GetAllBudgetSavings(int BudgetID);
        public Task<IncomeEvents> GetIncomeFromID(int IncomeID);
        public Task<string> SaveNewIncome(IncomeEvents income, int BudgetID);
        public Task<string> UpdateIncome(IncomeEvents Income);
        public Task<string> PatchIncome(int IncomeID, List<PatchDoc> PatchDoc);
        public Task<string> DeleteIncome(int IncomeID);
        public Task<List<IncomeEvents>> GetBudgetIncomes(int BudgetID, string page);
        public Task<string> UpdateBudgetValues(int budgetID);
        public Task<Transactions> SaveNewTransaction(Transactions Transaction, int BudgetID);
        public Task<Transactions> TransactTransaction(int TransactionID);
        public Task<string> UpdateTransaction(Transactions Transaction);
        public Task<string> DeleteTransaction(int TransactionID);
        public Task<List<string>> GetBudgetEventTypes(int BudgetID);
        public Task<Transactions> GetTransactionFromID(int TransactionID);
        public Task<Budgets> GetAllBudgetTransactions(int BudgetID);
        public Task<List<Transactions>> GetRecentTransactions(int BudgetID, int NumberOf, string page);
        public Task<List<Transactions>> GetCurrentPayPeriodTransactions(int BudgetID, string page);
        public Task<List<Transactions>> GetFilteredTransactions(int BudgetID, FilterModel Filters, string page);
        public Task<List<Transactions>> GetRecentTransactionsOffset(int BudgetID, int NumberOf, int Offset, string page);
        public Task<Budgets> SaveBudgetDailyCycle(Budgets budget);
        public Task<string> CreateNewOtpCode(int UserID, string OTPType);
        public Task<string> ValidateOTPCodeEmail(OTP UserOTP);
        public Task<int> GetUserIdFromEmail(string UserEmail);
        public Task<List<string>> GetPayeeList(int BudgetID);
        public Task<List<Payees>> GetPayeeListFull(int BudgetID);
        public Task<Categories> GetPayeeLastCategory(int BudgetID, string PayeeName);
        public Task<string> DeletePayee(int BudgetID, string OldPayeeName, string NewPayeeName);
        public Task<string> UpdatePayee(int BudgetID, string OldPayeeName, string NewPayeeName);
        public Task<List<Categories>> GetCategories(int BudgetID);
        public Task<Categories> GetCategoryFromID(int CategoryID);
        public Task<int> AddNewCategory(int BudgetID, DefaultCategories Category);
        public Task<Categories> AddNewSubCategory(int BudgetID, Categories Category);
        public Task<string> PatchCategory(int CategoryID, List<PatchDoc> PatchDoc);
        public Task<string> UpdateAllTransactionsCategoryName(int CategoryID);
        public Task<List<Categories>> GetAllHeaderCategoryDetailsFull(int BudgetID);
        public Task<List<Categories>> GetHeaderCategoryDetailsFull(int CategoryID, int BudgetID);
        public Task<string> DeleteCategory(int CategoryID, bool IsReassign ,int ReAssignID);
        public Task<Dictionary<string, int>> GetAllCategoryNames(int BudgetID);
        public Task<List<Savings>> GetBudgetEnvelopeSaving(int BudgetID);
        public Task<List<Savings>> GetBudgetRegularSaving(int BudgetID); 
        public Task<string> ShareBudgetRequest(ShareBudgetRequest BudgetShare);
        public Task<FirebaseDevices> RegisterNewFirebaseDevice(FirebaseDevices NewDevice);
        public Task<FirebaseDevices> UpdateDeviceUserDetails(FirebaseDevices NewDevice);
        public Task<string> ValidateOTPCodeShareBudget(OTP UserOTP, int SharedBudgetRequestID);
        public Task<ShareBudgetRequest> GetShareBudgetRequestByID(int SharedBudgetRequestID);
        public Task<string> CancelCurrentShareBudgetRequest(int BudgetID);
        public Task<string> StopSharingBudget(int BudgetID);
        public Task<List<Budgets>> GetUserAccountBudgets(int UserID, string page);
    }
}
