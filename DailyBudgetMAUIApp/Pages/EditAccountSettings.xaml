<?xml version="1.0" encoding="utf-8" ?>
<local:BasePage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
            xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
            x:Class="DailyBudgetMAUIApp.Pages.EditAccountSettings"
             xmlns:local="clr-namespace:DailyBudgetMAUIApp"
            xmlns:xct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
            xmlns:the49="https://schemas.the49.com/dotnet/2023/maui"
            xmlns:handlers="clr-namespace:DailyBudgetMAUIApp.Handlers"
            xmlns:helpers="clr-namespace:DailyBudgetMAUIApp.Helpers"
            xmlns:checkBox="clr-namespace:Syncfusion.Maui.Buttons;assembly=Syncfusion.Maui.Buttons"
            xmlns:sfavatar="clr-namespace:Syncfusion.Maui.Core;assembly=Syncfusion.Maui.Core"
            xmlns:droid="clr-namespace:CommunityToolkit.Maui.PlatformConfiguration.AndroidSpecific;assembly=CommunityToolkit.Maui"
            xmlns:touchEffects="clr-namespace:Maui.FreakyEffects.TouchEffects;assembly=Maui.FreakyEffects"            
            Shell.TabBarIsVisible="False"
            Shell.NavBarIsVisible="True"
            Shell.FlyoutBehavior="Flyout"
            droid:NavigationBar.Color="{StaticResource PrimaryDark}"
            droid:NavigationBar.Style="LightContent"
            Title="{Binding Title}">
    <VerticalStackLayout x:Name="AllContent">
        <AbsoluteLayout x:Name="MainAbs">
            <Grid x:Name="MainVSL" AbsoluteLayout.LayoutBounds="0,0" AbsoluteLayout.LayoutFlags="PositionProportional" Margin="0,0,0,0" RowDefinitions="Auto,*,Auto" ColumnDefinitions="*">
                <ScrollView x:Name="MainScrollView" Margin="0" Grid.Column="0" Grid.Row="1" >
                    <Grid ColumnDefinitions="*" RowDefinitions="Auto,Auto,Auto,Auto,Auto,Auto,Auto,Auto" x:Name="grdFilters" Margin="0,0,0,0">
                        <VerticalStackLayout Grid.Row="0" Grid.Column="0" Margin="5,5,5,0">
                            <Grid VerticalOptions="Center"  ColumnDefinitions="Auto,*,Auto" RowDefinitions="Auto,Auto" Margin="0,10,0,10">
                                <Label Grid.Column="1" Grid.Row="0" Text="Account Details" Margin="15,0,0,0" FontSize="{Binding Source=Medium, Converter={StaticResource StringToSizeConverter}}" FontAttributes="Bold" VerticalOptions="Center" TextColor="{StaticResource Primary}"/>
                                <Image Grid.Column="2" Grid.Row="0" HorizontalOptions="End" VerticalOptions="Center"  Margin="0,0,20,0">
                                    <Image.Source>
                                        <FontImageSource x:Name="UpdateDetailsIcon" FontFamily="MaterialDesignIcons" Glyph="{x:Static helpers:MaterialDesignIconsFonts.Expand_more}" Size="30"  Color="{DynamicResource Info}"/>
                                    </Image.Source>
                                </Image>
                            </Grid>
                            <VerticalStackLayout Margin="10,0,10,15" x:Name="UpdateDetails" HorizontalOptions="Fill">
                                <Label Text="Switch Default Budget" FontSize="{Binding Source=Small, Converter={StaticResource StringToSizeConverter}}" TextColor="{DynamicResource Gray900}" Padding="5,5,0,4"/>
                                <Border Style="{StaticResource StandardInputBorder}" Padding="0" Margin="5,0,0,15" HeightRequest="44" Stroke="{StaticResource Info}" x:Name="vslPckrSwitchBudget">
                                </Border>
                                <Label Text="Update Email" FontSize="{Binding Source=Small, Converter={StaticResource StringToSizeConverter}}" TextColor="{DynamicResource Gray900}" Padding="5,0,0,4"/>
                                <Grid ColumnDefinitions="*, Auto" RowDefinitions="Auto,Auto,Auto,Auto,Auto" Margin="0">
                                    <Border Grid.Column="0" Grid.Row="0" Style="{StaticResource StandardInputBorder}" Padding="0"  HeightRequest="44" Stroke="{StaticResource Info}" Margin="5,0,5,0">
                                        <handlers:BorderlessEntry HeightRequest="44" Text="{Binding NewEmail}" TextColor="{DynamicResource Gray900}" CharacterSpacing="0" Margin="20,0,0,0" Keyboard="Email" Placeholder="{Binding User.Email}" PlaceholderColor="{StaticResource Gray400}">
                                            <Entry.Behaviors>
                                                <xct:EmailValidationBehavior x:Name="EmailValidValidator" Flags="ValidateOnUnfocused,ValidateOnValueChanged" IsValid="{Binding EmailValid}" BindingContext="{Binding BindingContext, Source={x:Reference AllContent}, x:DataType=EditAccountSettingsViewModel}"/>
                                                <xct:TextValidationBehavior x:Name="EmailRequiredValidator" Flags="ValidateOnUnfocused, ValidateOnValueChanged" MinimumLength="1"  IsValid="{Binding EmailRequired}" BindingContext="{Binding BindingContext, Source={x:Reference AllContent}, x:DataType=EditAccountSettingsViewModel}"/>
                                            </Entry.Behaviors>
                                        </handlers:BorderlessEntry>
                                    </Border>
                                    <Button Clicked="UpdateEmail_Clicked" Margin="10,0,0,0" Grid.Row="0" Grid.Column="1" Command="{Binding UpdateEmailCommand}" Padding="10,0,10,0" FontSize="{Binding Source=Small, Converter={StaticResource StringToSizeConverter}}" Text="Update" FontFamily="OpenSansSemibold" CharacterSpacing="1.5" BackgroundColor="{StaticResource Success}" CornerRadius="10" Style="{StaticResource TitleButtons}" TextColor="White"/>
                                    <HorizontalStackLayout IsVisible="{Binding EmailValid, Converter={StaticResource BoolConverter}}" Margin="10,4,10,0" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
                                        <Image>
                                            <Image.Source>
                                                <FontImageSource FontFamily="MaterialDesignIcons" Glyph="{x:Static helpers:MaterialDesignIconsFonts.Error}" Size="15" Color="{DynamicResource Danger}"/>
                                            </Image.Source>
                                        </Image>
                                        <Label Text="Your new email has to be valid" Style="{StaticResource ErrorMessage}"/>
                                    </HorizontalStackLayout>
                                    <HorizontalStackLayout IsVisible="{Binding EmailRequired, Converter={StaticResource BoolConverter}}" Margin="10,4,10,0" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2">
                                        <Image>
                                            <Image.Source>
                                                <FontImageSource FontFamily="MaterialDesignIcons"  Glyph="{x:Static helpers:MaterialDesignIconsFonts.Error}" Size="15" Color="{DynamicResource Danger}"/>
                                            </Image.Source>
                                        </Image>
                                        <Label Text="You have to enter a password to change it." Style="{StaticResource ErrorMessage}"/>
                                    </HorizontalStackLayout>
                                    <Border Style="{StaticResource brdSuccess}" Margin="5,10,0,10" VerticalOptions="Center" HorizontalOptions="Center" IsVisible="{Binding EmailChangedMessageVisible}" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2">
                                        <Label Text="Congrats!! Your email has been successfully updated!" HorizontalTextAlignment="Center" VerticalOptions="Center" HorizontalOptions="Center" TextColor="{DynamicResource Success}" FontAttributes="Bold" FontSize="{Binding Source=Small, Converter={StaticResource StringToSizeConverter}}"/>
                                    </Border>
                                    <Border Style="{StaticResource brdDanger}" Margin="5,10,0,10" VerticalOptions="Center" HorizontalOptions="Center" IsVisible="{Binding EmailNotChangedMessageVisible}" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2">
                                        <Label Text="Something went wrong, your email wasn't updated!" HorizontalTextAlignment="Center" VerticalOptions="Center" HorizontalOptions="Center" TextColor="{DynamicResource Danger}" FontAttributes="Bold" FontSize="{Binding Source=Small, Converter={StaticResource StringToSizeConverter}}"/>
                                    </Border>
                                </Grid>
                                <Label Text="Update Nickname" FontSize="{Binding Source=Small, Converter={StaticResource StringToSizeConverter}}" TextColor="{DynamicResource Gray900}" Padding="5,15,0,4"/>
                                <Grid ColumnDefinitions="*, Auto" RowDefinitions="Auto,Auto,Auto,Auto,Auto" Margin="0">
                                    <Border Grid.Column="0" Grid.Row="0" Style="{StaticResource StandardInputBorder}" Padding="0"  HeightRequest="44" Stroke="{StaticResource Info}" Margin="5,0,5,0">
                                        <handlers:BorderlessEntry HeightRequest="44" Text="{Binding NewNickName}" TextColor="{DynamicResource Gray900}" CharacterSpacing="0" Margin="20,0,0,0" Keyboard="Email" Placeholder="{Binding User.NickName}" PlaceholderColor="{StaticResource Gray400}">
                                            <Entry.Behaviors>
                                                <xct:TextValidationBehavior Flags="ValidateOnUnfocused, ValidateOnValueChanged" x:Name="NickNameRequiredValidator" MinimumLength="1" IsValid="{Binding NickNameRequired}" BindingContext="{Binding BindingContext, Source={x:Reference AllContent}, x:DataType=EditAccountSettingsViewModel}"/>
                                            </Entry.Behaviors>
                                        </handlers:BorderlessEntry>
                                    </Border>
                                    <Button Clicked="UpdateNickname_Clicked" Margin="10,0,0,0" Grid.Row="0" Grid.Column="1" Command="{Binding UpdateNicknameCommand}" Padding="10,0,10,0" FontSize="{Binding Source=Small, Converter={StaticResource StringToSizeConverter}}" Text="Update" FontFamily="OpenSansSemibold" CharacterSpacing="1.5" BackgroundColor="{StaticResource Success}" CornerRadius="10" Style="{StaticResource TitleButtons}" TextColor="White"/>
                                    <HorizontalStackLayout IsVisible="{Binding NickNameRequired, Converter={StaticResource BoolConverter}}" Margin="10,4,10,0" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2">
                                        <Image>
                                            <Image.Source>
                                                <FontImageSource FontFamily="MaterialDesignIcons"  Glyph="{x:Static helpers:MaterialDesignIconsFonts.Error}" Size="15" Color="{DynamicResource Danger}"/>
                                            </Image.Source>
                                        </Image>
                                        <Label Text="You have to enter a nickname to change it." Style="{StaticResource ErrorMessage}"/>
                                    </HorizontalStackLayout>
                                    <Border Style="{StaticResource brdSuccess}" Margin="5,10,0,10" VerticalOptions="Center" HorizontalOptions="Center" IsVisible="{Binding NicknameChangedMessageVisible}" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2">
                                        <Label Text="Congrats!! Your nickname has been successfully updated!" HorizontalTextAlignment="Center" VerticalOptions="Center" HorizontalOptions="Center" TextColor="{DynamicResource Success}" FontAttributes="Bold" FontSize="{Binding Source=Small, Converter={StaticResource StringToSizeConverter}}"/>
                                    </Border>
                                    <Border Style="{StaticResource brdDanger}" Margin="5,10,0,10" VerticalOptions="Center" HorizontalOptions="Center" IsVisible="{Binding NicknameNotChangedMessageVisible}" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2">
                                        <Label Text="Something went wrong, your email wasn't updated!" HorizontalTextAlignment="Center" VerticalOptions="Center" HorizontalOptions="Center" TextColor="{DynamicResource Danger}" FontAttributes="Bold" FontSize="{Binding Source=Small, Converter={StaticResource StringToSizeConverter}}"/>
                                    </Border>
                                </Grid>
                                <VerticalStackLayout Margin="0,10,0,0">
                                    <Label Text="Current Password" FontSize="{Binding Source=Small, Converter={StaticResource StringToSizeConverter}}" TextColor="{DynamicResource Gray900}" Padding="5,10,0,4"/>
                                    <Border Style="{StaticResource StandardInputBorder}" Padding="0"  HeightRequest="44" Stroke="{StaticResource Info}" Margin="5,0,5,0">
                                        <handlers:BorderlessEntry HeightRequest="44" Text="{Binding CurrentPassword}" TextColor="{DynamicResource Gray900}" CharacterSpacing="2" Margin="20,0,0,0" Keyboard="Text" IsPassword="True" Placeholder="********" PlaceholderColor="{StaticResource Gray400}">
                                            <Entry.Behaviors>
                                                <xct:TextValidationBehavior x:Name="PasswordRequiredValidator" MinimumLength="1" Flags="ValidateOnValueChanged, ForceMakeValidWhenFocused" IsValid="{Binding PasswordRequired}" BindingContext="{Binding BindingContext, Source={x:Reference AllContent}, x:DataType=EditAccountSettingsViewModel}"/>
                                            </Entry.Behaviors>
                                        </handlers:BorderlessEntry>
                                    </Border>
                                    <HorizontalStackLayout IsVisible="{Binding PasswordRequired, Converter={StaticResource BoolConverter}}" Margin="10,4,10,0">
                                        <Image>
                                            <Image.Source>
                                                <FontImageSource FontFamily="MaterialDesignIcons" Glyph="{x:Static helpers:MaterialDesignIconsFonts.Error}" Size="15" Color="{DynamicResource Danger}"/>
                                            </Image.Source>
                                        </Image>
                                        <Label Text="You have to enter a passowrd" Style="{StaticResource ErrorMessage}"/>
                                    </HorizontalStackLayout>
                                    <HorizontalStackLayout IsVisible="{Binding CurrentPasswordValid, Converter={StaticResource BoolConverter}}" Margin="10,4,10,0">
                                        <Image>
                                            <Image.Source>
                                                <FontImageSource FontFamily="MaterialDesignIcons"  Glyph="{x:Static helpers:MaterialDesignIconsFonts.Error}" Size="15" Color="{DynamicResource Danger}"/>
                                            </Image.Source>
                                        </Image>
                                        <Label Text="Thats not your password, is this really you?!" Style="{StaticResource ErrorMessage}"/>
                                    </HorizontalStackLayout>
                                </VerticalStackLayout>
                                <VerticalStackLayout>
                                    <Label Text="New Password" FontSize="{Binding Source=Small, Converter={StaticResource StringToSizeConverter}}" TextColor="{DynamicResource Gray900}" Padding="5,15,0,4"/>
                                    <Border Style="{StaticResource StandardInputBorder}" Padding="0"  HeightRequest="44" Stroke="{StaticResource Info}" Margin="5,0,5,0">
                                        <handlers:BorderlessEntry Focused="NewPassword_Focused" HeightRequest="44" Text="{Binding NewPassword}" TextColor="{DynamicResource Gray900}" CharacterSpacing="2" Margin="20,0,0,0" Keyboard="Text" IsPassword="True" Placeholder="********" PlaceholderColor="{StaticResource Gray400}">
                                            <Entry.Behaviors>
                                                <xct:TextValidationBehavior x:Name="NewPasswordRequiredValidator" MinimumLength="1" Flags="ValidateOnValueChanged, ForceMakeValidWhenFocused" IsValid="{Binding NewPasswordRequired}" BindingContext="{Binding BindingContext, Source={x:Reference AllContent}, x:DataType=EditAccountSettingsViewModel}"/>
                                                <xct:TextValidationBehavior x:Name="NewPasswordValidValidator" RegexPattern="^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[^\da-zA-Z]).{8,15}$" Flags="ValidateOnValueChanged, ForceMakeValidWhenFocused" IsValid="{Binding NewPasswordValid}" BindingContext="{Binding BindingContext, Source={x:Reference AllContent}, x:DataType=EditAccountSettingsViewModel}"/>
                                            </Entry.Behaviors>
                                        </handlers:BorderlessEntry>
                                    </Border>
                                    <HorizontalStackLayout IsVisible="{Binding NewPasswordRequired, Converter={StaticResource BoolConverter}}" Margin="10,4,10,0">
                                        <Image>
                                            <Image.Source>
                                                <FontImageSource FontFamily="MaterialDesignIcons" Glyph="{x:Static helpers:MaterialDesignIconsFonts.Error}" Size="15" Color="{DynamicResource Danger}"/>
                                            </Image.Source>
                                        </Image>
                                        <Label Text="You have to enter a passowrd" Style="{StaticResource ErrorMessage}"/>
                                    </HorizontalStackLayout>
                                    <HorizontalStackLayout IsVisible="{Binding NewPasswordValid, Converter={StaticResource BoolConverter}}" Margin="10,4,10,0">
                                        <Image>
                                            <Image.Source>
                                                <FontImageSource FontFamily="MaterialDesignIcons"  Glyph="{x:Static helpers:MaterialDesignIconsFonts.Error}" Size="15" Color="{DynamicResource Danger}"/>
                                            </Image.Source>
                                        </Image>
                                        <Label Text="Password must be at least 8 characters long, have an Uppercase, Lowercase, Number  and Special character!" Style="{StaticResource ErrorMessage}"/>
                                    </HorizontalStackLayout>
                                </VerticalStackLayout>
                                <VerticalStackLayout>
                                    <Label Text="Confirm Password" FontSize="{Binding Source=Small, Converter={StaticResource StringToSizeConverter}}" TextColor="{DynamicResource Gray900}" Padding="5,15,0,4"/>
                                    <Border Style="{StaticResource StandardInputBorder}" Padding="0"  HeightRequest="44" Stroke="{StaticResource Info}" Margin="5,0,5,0">
                                        <handlers:BorderlessEntry Focused="PasswordConfirm_Focused" HeightRequest="44" Text="{Binding NewPasswordConfirm}" TextColor="{DynamicResource Gray900}" CharacterSpacing="2" Margin="20,0,0,0" Keyboard="Text" IsPassword="True" Placeholder="********" PlaceholderColor="{StaticResource Gray400}">
                                            <Entry.Behaviors>
                                                <xct:TextValidationBehavior x:Name="PasswordConfirmValidator" MinimumLength="1" Flags="ValidateOnValueChanged, ForceMakeValidWhenFocused" IsValid="{Binding PasswordConfirmRequired}" BindingContext="{Binding BindingContext, Source={x:Reference AllContent}, x:DataType=EditAccountSettingsViewModel}"/>
                                            </Entry.Behaviors>
                                        </handlers:BorderlessEntry>
                                    </Border>
                                </VerticalStackLayout>
                                <HorizontalStackLayout IsVisible="{Binding PasswordConfirmRequired, Converter={StaticResource BoolConverter}}" Margin="10,4,10,0">
                                    <Image>
                                        <Image.Source>
                                            <FontImageSource FontFamily="MaterialDesignIcons" Glyph="{x:Static helpers:MaterialDesignIconsFonts.Error}" Size="15" Color="{DynamicResource Danger}"/>
                                        </Image.Source>
                                    </Image>
                                    <Label Text="You have to enter a passowrd" Style="{StaticResource ErrorMessage}"/>
                                </HorizontalStackLayout>
                                <HorizontalStackLayout IsVisible="{Binding NewPasswordMatch, Converter={StaticResource BoolConverter}}" Margin="10,4,10,0">
                                    <Image>
                                        <Image.Source>
                                            <FontImageSource FontFamily="MaterialDesignIcons"  Glyph="{x:Static helpers:MaterialDesignIconsFonts.Error}" Size="15" Color="{DynamicResource Danger}"/>
                                        </Image.Source>
                                    </Image>
                                    <Label Text="You new password has to match, just in case you got it wrong. Would be awkward" Style="{StaticResource ErrorMessage}"/>
                                </HorizontalStackLayout>
                                <VerticalStackLayout Margin="5,20,5,0">
                                    <Border Style="{StaticResource brdSuccess}" Margin="0,0,0,10" VerticalOptions="Center" HorizontalOptions="Center" IsVisible="{Binding PasswordChangedMessageVisible}">
                                        <Label Text="Your Password has been successfully updated!" HorizontalTextAlignment="Center" VerticalOptions="Center" HorizontalOptions="Center" TextColor="{DynamicResource Success}" FontAttributes="Bold" FontSize="{Binding Source=Small, Converter={StaticResource StringToSizeConverter}}"/>
                                    </Border>
                                    <Border Style="{StaticResource brdDanger}" Margin="0,0,0,10" VerticalOptions="Center" HorizontalOptions="Center" IsVisible="{Binding PasswordNotChangedMessageVisible}">
                                        <Label Text="Something went wrong, your password wasn't updated!" HorizontalTextAlignment="Center" VerticalOptions="Center" HorizontalOptions="Center" TextColor="{DynamicResource Danger}" FontAttributes="Bold" FontSize="{Binding Source=Small, Converter={StaticResource StringToSizeConverter}}"/>
                                    </Border>
                                    <Button Clicked="UpdatePassword_Clicked" Command="{Binding UpdatePasswordCommand}" Padding="0,0,0,0" FontSize="{Binding Source=Small, Converter={StaticResource StringToSizeConverter}}" Text="Update Password" FontFamily="OpenSansSemibold" CharacterSpacing="1.5" BackgroundColor="{StaticResource Info}" CornerRadius="2" Style="{StaticResource TitleButtons}" TextColor="White"/>
                                </VerticalStackLayout>
                                <VerticalStackLayout Margin="5,15,5,0" x:Name="FamilyAccounts" HorizontalOptions="Fill">
                                    <Label Text="Family Accounts!" FontSize="{Binding Source=Small, Converter={StaticResource StringToSizeConverter}}" TextColor="{DynamicResource Gray900}" Padding="0,0,0,15"/>
                                    <Button Clicked="ViewFamilyAccount_Clicked" Padding="0,0,0,0" FontSize="{Binding Source=Small, Converter={StaticResource StringToSizeConverter}}" Text="View Family Accounts" FontFamily="OpenSansSemibold" CharacterSpacing="1.5" BackgroundColor="{StaticResource Info}" CornerRadius="2" Style="{StaticResource TitleButtons}" TextColor="White"/>
                                    <Grid ColumnDefinitions="*" RowDefinitions="*" HorizontalOptions="Fill">
                                        <handlers:ReadMoreAccordion Grid.Row="0" Grid.Column="0" Margin="0,5,0,10" HorizontalOptions="Start" TextBody="With a premium account, you can set up individual profiles for your children and other family members, giving everyone the tools to manage their money confidently. Whether it's setting up a regular pocket money transfer or a one-time allowance, you control how and when funds are shared. Each family member gets access to the same powerful features of dbudget, like goal tracking, spending insights, and savings challenges—so even kids can start building smart money habits early. It’s a fun and practical way to teach financial literacy while keeping the whole family financially connected."/>
                                    </Grid>
                                </VerticalStackLayout>                                
                                <VerticalStackLayout Margin="5,15,5,0" x:Name="DPASetting" HorizontalOptions="Fill">
                                    <Label Text="Agree to be contacted by dBudget?" FontSize="{Binding Source=Small, Converter={StaticResource StringToSizeConverter}}" TextColor="{DynamicResource Gray900}" Padding="0,0,0,5"/>
                                    <Grid ColumnDefinitions="60,*" Margin="0,0,0,0" HeightRequest="40">
                                        <handlers:CustomSwitch Grid.Column="0" IsToggled="{Binding IsDPA}" />
                                        <HorizontalStackLayout VerticalOptions="Center" Grid.Column="1" HorizontalOptions="Start">
                                            <Label HorizontalOptions="Start" Text="{Binding IsDPA, Converter={StaticResource IsDPATextConverter}}" TextColor="{StaticResource Info}" FontAttributes="Bold" FontSize="{Binding Source=Small, Converter={StaticResource StringToSizeConverter}}" Padding="10,0,0,0"/>
                                        </HorizontalStackLayout>
                                    </Grid>
                                    <Grid ColumnDefinitions="*" RowDefinitions="*" HorizontalOptions="Fill">
                                        <handlers:ReadMoreAccordion Grid.Row="0" Grid.Column="0" Margin="0,5,0,0" HorizontalOptions="Start" TextBody="From time to time, DBuget may reach out to you with offers, information, or statistics about your spending habits, or for other important updates. Rest assured, we will only contact you when it’s truly valuable and will never send unsolicited messages. We will also never share your details with third parties for marketing purposes. If you prefer not to receive these communications, you can opt out here."/>
                                    </Grid>
                                </VerticalStackLayout>
                                <VerticalStackLayout Margin="5,15,5,0" HorizontalOptions="Fill">
                                    <Label Text="Allow push notifications?" FontSize="{Binding Source=Small, Converter={StaticResource StringToSizeConverter}}" TextColor="{DynamicResource Gray900}" Padding="0,0,0,5"/>
                                    <Grid ColumnDefinitions="60,*" Margin="0,0,0,0" HeightRequest="40">
                                        <handlers:CustomSwitch Grid.Column="0" IsToggled="{Binding IsPushNotificationsEnabled}" />
                                        <HorizontalStackLayout VerticalOptions="Center" Grid.Column="1" HorizontalOptions="Start">
                                            <Label HorizontalOptions="Start" Text="{Binding IsPushNotificationsEnabledLabelText}" TextColor="{StaticResource Info}" FontAttributes="Bold" FontSize="{Binding Source=Small, Converter={StaticResource StringToSizeConverter}}" Padding="10,0,0,0"/>
                                        </HorizontalStackLayout>
                                    </Grid>
                                    <Grid ColumnDefinitions="*" RowDefinitions="*" HorizontalOptions="Fill">
                                        <handlers:ReadMoreAccordion Grid.Row="0" Grid.Column="0" Margin="0,5,0,0" HorizontalOptions="Start" TextBody="dBudget sends notifications to keep you informed about updates to your account or if we’ve reached out regarding a support request. We also notify you about scheduled events, such as upcoming bill due dates or when a savings goal is achieved. To receive these notifications on your phone, enable push notifications for the app. Rest assured, we won’t overwhelm you with unnecessary alerts."/>
                                    </Grid>
                                </VerticalStackLayout>
                                <VerticalStackLayout x:Name="BudgetVisibility" Margin="0,15,5,0">
                                    <Label Text="Update Budget Visibility" FontSize="{Binding Source=Small, Converter={StaticResource StringToSizeConverter}}" TextColor="{DynamicResource Gray900}" Padding="5,0,0,5"/>
                                    <Grid ColumnDefinitions="60, *" Margin="5,5,0,0" RowDefinitions="Auto">
                                        <handlers:CustomSwitch Grid.Column="0" Grid.Row="0" IsToggled="{Binding IsBudgetHidden}"/>
                                        <Label IsVisible="{Binding IsBudgetHidden}" Margin="10,0,0,0" HorizontalOptions="Start" VerticalOptions="Center" Text="Hide detailed budget information"  Grid.Column="1" Grid.Row="0" TextColor="{StaticResource Info}" FontAttributes="Bold"  FontSize="{Binding Source=Small, Converter={StaticResource StringToSizeConverter}}" Padding="0,0,0,0" />
                                        <Label IsVisible="{Binding IsBudgetHidden, Converter={StaticResource BoolConverter}}" Margin="10,0,0,0" HorizontalOptions="Start" VerticalOptions="Center" Text="Show all budget details" FontAttributes="Bold" Grid.Column="1" Grid.Row="0" TextColor="{StaticResource Info}"  FontSize="{Binding Source=Small, Converter={StaticResource StringToSizeConverter}}" Padding="0,0,0,0" />
                                    </Grid>
                                    <Grid ColumnDefinitions="*" RowDefinitions="*" HorizontalOptions="Fill">
                                        <handlers:ReadMoreAccordion Grid.Row="0" Grid.Column="0" Margin="5,10,0,0" HorizontalOptions="Start" TextBody="Budget visibility is designed to provide flexible control over financial insights within a family account. By default, the parent account has full access to all aspects of the family budget, including transactions, savings, bills, and other financial details. However, users have the option to adjust this visibility, limiting access to high-level summaries instead of detailed breakdowns. This feature can be particularly useful in scenarios where a family member is learning to manage their finances independently, or if restricted visibility was agreed upon as part of a budgeting strategy. This visibility setting is configured at account creation, allowing family members to define the level of detail available to them from the start. If needed, the family account member can update their visibility preferences later, opting to access full financial details at any time."/>
                                    </Grid>
                                </VerticalStackLayout>
                            </VerticalStackLayout>
                        </VerticalStackLayout>
                        <BoxView HeightRequest="1" Grid.Row="1" Grid.Column="0" Color="{DynamicResource InfoLL}" Margin="0,5,0,5"/>
                    </Grid>
                </ScrollView>
                <VerticalStackLayout x:Name="BtnApply" Grid.Column="0" Grid.Row="2" Margin="0,0,0,0">
                    <Button Command="{Binding DeleteUserAccountCommand}" Padding="0,10,0,10" FontSize="{Binding Source=Small, Converter={StaticResource StringToSizeConverter}}" Text="Delete Account" FontFamily="OpenSansSemibold" CharacterSpacing="1.5" BackgroundColor="{StaticResource Danger}" Margin="10,10,10,0" CornerRadius="2" Style="{StaticResource TitleButtons}" TextColor="White"/>
                </VerticalStackLayout>
            </Grid>
        </AbsoluteLayout>
    </VerticalStackLayout>
</local:BasePage>